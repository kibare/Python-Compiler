S -> CONT
CONT -> CONT NL CONT | NL CONT | CONT NL | IF_CONT | ITERATE_CONT | CLASS_CONT | DEF_FNC_CONT | ASS_OPER | FLW_CONT | IMP_OPER | RAI_OP | FNCTION | METH_CONT | WITH_CONT | PASS | STRING | LIST | DICT | VAR | CONSTANT | NONE | COND_OPER | ASS_OPER
ITERATE_CONT -> FOR_CONT | WHILE_CONT | LIST | DICT | VAR | CONSTANT
FLW_CONT -> CONTINUE_CONT | BREAK_CONT
IF -> a
ELIF -> b
ELSE -> c
IF_CONT -> IF_HDR CONT | IF_CONT ELIF_CONT | IF_CONT ELSE_CONT
IF_HDR -> IF COND_OPER COLON NL
ELIF_CONT -> ELIF_HDR CONT | ELIF_CONT ELIF_CONT | ELIF_CONT ELSE_CONT
ELIF_HDR -> ELIF COND_OPER COLON NL
ELSE_CONT -> ELSE_HDR CONT
ELSE_HDR -> ELSE COLON NL
FOR -> d
IN -> e
FOR_CONT -> FOR_HDR CONT
FOR_HDR -> FOR FOR_VAR IN ITERABLE COLON NL
FOR_VAR -> VAR | VAR COMMA FOR_VAR
ITERABLE -> STRING | LIST | VAR | FNCTION | METH_CONT | DICT
WHILE -> f
WHILE_CONT -> WHILE_HDR CONT
WHILE_HDR -> WHILE COND_OPER COLON NL
ITERATE -> FOR_HDR | FOR_CONT | WHILE_HDR | WHILE_CONT
CONTINUE -> g NL
CONTINUE_CONT -> ITERATE CONTINUE | ITERATE CONTINUE CONT
BREAK -> i NL
BREAK_CONT -> ITERATE BREAK | ITERATE BREAK CONT
PASS -> h
CLASS -> j
CLASS_CONT -> CLASS_HDR CLASS_BODY
CLASS_HDR -> CLASS NAME COLON NL | CLASS NAME NRM_BKT_OPN CLASS_PARAM NRM_BKT_CLS COLON NL
CLASS_PARAM -> CLASS_PARAM COMMA CLASS_PARAM | NAME
CLASS_BODY -> CLASS_BODY NL CLASS_BODY | CLASS_BODY NL | IF_CONT | ITERATE_CONT | CLASS_CONT | DEF_FNC_CONT | ASS_OPER | FLW_CONT | IMP_OPER | FNCTION | METH_CONT | PASS | STRING
DEF -> k
DEF_FNC_CONT -> DEF_FNC_HDR DEF_FNC_BODY
DEF_FNC_HDR -> DEF NAME NRM_BKT_OPN DEF_FNC_PARAM NRM_BKT_CLS COLON NL | DEF NAME NRM_BKT_OPN NRM_BKT_CLS COLON NL
DEF_FNC_BODY -> DEF_FNC_BODY NL DEF_FNC_BODY | CONT_FNC
DEF_FNC_RETURN -> RETURN ART_OPER | RETURN COND_OPER | RETURN DEF_FNC_RETURN_VAL | RETURN
DEF_FNC_RETURN_VAL -> METH_CONT | FNCTION | VAR | LIST | STRING | DICT | CONSTANT | NONE
DEF_FNC_PARAM -> DEF_FNC_PARAM COMMA DEF_FNC_PARAM | NAME
RETURN -> l
CONT_FNC -> CONT_FNC NL CONT_FNC | CONT_FNC NL | IF_CONT_FNC | FOR_CONT_FNC | WHILE_CONT_FNC | CONTINUE_CONT_FNC | BREAK_CONT_FNC | CLASS_CONT | DEF_FNC_CONT | ASS_OPER | IMP_OPER | RAI_OP | FNCTION | METH_CONT | WITH_CONT_FNC | PASS | STRING | DEF_FNC_RETURN | LIST | DICT | VAR | CONSTANT | NONE
IF_CONT_FNC -> IF_HDR CONT_FNC | IF_CONT_FNC ELIF_CONT_FNC | IF_CONT_FNC ELSE_CONT_FNC
ELIF_CONT_FNC -> ELIF_HDR CONT_FNC | ELIF_CONT_FNC ELIF_CONT_FNC | ELIF_CONT_FNC ELSE_CONT_FNC
ELSE_CONT_FNC -> ELSE_HDR CONT_FNC
FOR_CONT_FNC -> FOR_HDR CONT_FNC
WHILE_CONT_FNC -> WHILE_HDR CONT_FNC
ITERATE_FNC -> FOR_HDR | FOR_HDR CONT_FNC | WHILE_HDR | WHILE_HDR CONT_FNC
CONTINUE_CONT_FNC -> ITERATE_FNC CONTINUE | ITERATE CONTINUE CONT_FNC
BREAK_CONT_FNC -> ITERATE_FNC BREAK | ITERATE_FNC BREAK CONT_FNC
WITH_CONT_FNC -> WITH_HDR CONT_FNC
COND_OPER -> NRM_BKT_OPN COND_OPER NRM_BKT_CLS | COND_OPERAND COND_OPERATOR COND_OPER | COND_OPERAND
COND_OPERATOR -> REL_OP | LOG_OP | MEM_OP | IDN_OP
COND_OPERAND -> NOT COND_OPERAND | VAR | CONSTANT | ART_OPER | METH_CONT | FNCTION | LIST | STRING | NONE | NRM_BKT_OPN COND_OPERAND NRM_BKT_CLS
ASS_OPER -> VAR ASS_OPERATOR ASS_OPERAND
ASS_OPERATOR -> ASS_OP
ASS_OPERAND -> NRM_BKT_OPN ASS_OPERAND NRM_BKT_CLS | VAR | CONSTANT | COND_OPER | ART_OPER | METH_CONT | FNCTION | LIST | STRING | DICT | NONE
ART_OPER -> NRM_BKT_OPN ART_OPER NRM_BKT_CLS | ART_OPER ART_OPERATOR ART_OPER | ART_OPERAND
ART_OPERATOR -> ART_OP | BIT_OP
ART_OPERAND -> VAR | CONSTANT | METH_CONT | FNCTION
VAR -> NRM_BKT_OPN VAR NRM_BKT_CLS | VAR_CTN
VAR_CTN -> NAME | NAME VAR_IDX | METH_CONT_NAME | METH_CONT_NAME VAR_IDX
VAR_IDX -> VAR_IDX VAR_IDX | [ IDX ] | [ COLON ] | [ IDX COLON ] | [ COLON IDX ] | [ IDX COLON IDX ] | [ COLON COLON ] | [ COLON COLON IDX ] | [ COLON IDX COLON ] | [ COLON IDX COLON IDX ] | [ IDX COLON COLON ] | [ IDX COLON COLON IDX ] | [ IDX COLON IDX COLON ] | [ IDX COLON IDX COLON IDX ]
IDX -> VAR | CONSTANT | ART_OPER
NAME -> x
NUM -> PLS NUM | MIN NUM | NUM_CTN
POS_NUM -> PLS POS_NUM | NUM_CTN
NUM_CTN -> y
CONSTANT -> NRM_BKT_OPN CONSTANT NRM_BKT_CLS | CON_CTN
CON_CTN -> TRUE | FALSE | NUM
QUOTE -> '
DQUOTE -> "
COLON -> :
COMMA -> ,
DOT -> .
PLS -> +
MIN -> -
MUL -> *
NL -> NL NL | __new_line__
SPACE -> SPACE SPACE | __space__
OR_SYM -> __or__
REL_OP -> = = | ! = | < = | > = | < | > | IS
ASS_OP -> = | + = | - = | * = | * * = | / = | / / = | % =
ART_OP -> + | - | * | * * | / | / / | %
LOG_OP -> AND | OR
MEM_OP -> IN | NOT SPACE IN
IDN_OP -> IS | IS SPACE NOT
BIT_OP -> & | OR_SYM | ^ | > > | < <
SQR_BKT_OPN -> [
SQR_BKT_CLS -> ]
CRL_BKT_OPN -> {
CRL_BKT_CLS -> }
NRM_BKT_OPN -> (
NRM_BKT_CLS -> )
FNCTION -> FNCTION_BASE | FNCTION_BASE VAR_IDX
FNCTION_BASE -> VAR NRM_BKT_OPN FNCTION_PARAM NRM_BKT_CLS | VAR NRM_BKT_OPN NRM_BKT_CLS
FNCTION_PARAM -> FNCTION_PARAM COMMA FNCTION_PARAM | VAR | CONSTANT | STRING | LIST | DICT | NONE | FNCTION | METH_CONT | ART_OPER | COND_OPER
METH_CONT -> METH_INIT DOT METH_CONT | METH_BACK_FNC | METH_BACK_NAME
METH_CONT_NAME -> METH_INIT DOT METH_CONT_NAME | METH_BACK_NAME
METH_CONT_FNC -> METH_INIT DOT METH_CONT_FNC | METH_BACK_FNC
METH_INIT -> NRM_BKT_OPN METH_INIT NRM_BKT_CLS | METH_BACK_FNC | METH_BACK_NAME
METH_BACK_FNC -> FNCTION | FNCTION VAR_IDX
METH_BACK_NAME -> NAME | NAME VAR_IDX
STRING -> z | z VAR_IDX | STRING MUL POS_NUM | STRING PLS STRING
DICT -> CRL_BKT_OPN DICT_CONT CRL_BKT_CLS | CRL_BKT_OPN CRL_BKT_CLS
DICT_CONT -> DICT_TYPE COMMA DICT_TYPE | DICT_TYPE
DICT_TYPE -> DICT_TYPES COLON DICT_TYPES
DICT_TYPES -> VAR | CONSTANT | STRING | FNCTION | METH_CONT | NONE
LIST -> SQR_BKT_OPN LIST_CONT SQR_BKT_CLS | SQR_BKT_OPN SQR_BKT_CLS
LIST_TYPE -> VAR | CONSTANT | STRING | FNCTION | METH_CONT | LIST | DICT | NONE
LIST_CONT -> LIST_TYPE | LIST_CONT COMMA LIST_TYPE | LIST_TYPE FOR VAR IN FNCTION
IMP_OPER -> FROM IMP_CONT IMPORT IMPT_MOD | IMPORT IMP_CONT | IMPORT AS_BLOCK
AS_BLOCK -> AS_BLOCK COMMA AS_BLOCK | IMP_CONT AS NAME
IMP_CONT -> IMP_CONT DOT IMP_CONT | NAME
IMPT_MOD -> NAME | ALL | AS_BLOCK | IMPT_MOD COMMA IMPT_MOD
ALL -> *
AS -> m
IMPORT -> n
FROM -> o
RAI_OP -> RAISE RAI_BODY
RAI_BODY -> NRM_BKT_OPN RAI_BODY NRM_BKT_CLS | VAR | CONSTANT | COND_OPER | ART_OPER | METH_CONT | FNCTION | LIST | STRING | DICT | NONE
RAISE -> p
AND -> q
OR -> r
NOT -> s
IS -> t
TRUE -> u
FALSE -> v
NONE -> w
WITH_CONT -> WITH_HDR CONT
WITH_HDR -> WITH WITH_ST AS VAR COLON NL
WITH_ST -> FNCTION | METH_CONT_FNC
WITH -> A
